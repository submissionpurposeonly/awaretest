name: AutoPR

on:
  # 我们只保留一个最可控的触发器：当在 Issue 或 PR 下发表评论时
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  autopr:
    runs-on: ubuntu-latest
    # 只有当评论内容包含 /autopr 时才运行
    if: contains(github.event.comment.body, '/autopr')
    steps:
      # 步骤 1: 正确地 Checkout 您 PR 分支的代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 这个复杂的语句是为了从 issue 评论事件中，正确地找到关联的 PR 分支并下载
          ref: ${{ github.event.issue.pull_request.url && fromJson(toJSON(github.event.issue.pull_request)).head.ref || '' }}

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 步骤 3: 安装 Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1

      # 步骤 4: 安装您项目的所有依赖
      - name: Install dependencies
        run: poetry install

      # 步骤 5: 运行您自己的 AutoPR 代码！
      - name: Run AutoPR
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run python -m autopr.gh_actions_entrypoint

      # 步骤 6: 上传您写论文需要的日志文件
      - name: Upload Run Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autopr-run-log
          path: .autopr/logs/autopr_run.log